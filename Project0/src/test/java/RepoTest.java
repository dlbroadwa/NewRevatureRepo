import com.game.app.GameAccountApplication;
import com.game.data.AccountSQLRepo;
import com.game.data.MessageSQLRepo;
import com.game.data.Repository;
import com.game.models.Account;
import com.game.models.Message;
import com.game.utils.ConnectionUtils;
import com.game.utils.PostgresConnectionUtil;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.sql.Connection;
import java.util.List;

public class RepoTest {
    private Repository<Account, String> accounts;
    private MessageSQLRepo messages;

    @Before
    public void testInit() {
        ConnectionUtils connectionUtils = new PostgresConnectionUtil(
                "jdbc:postgresql://dyltrashs.crxekrgyc1qs.us-east-2.rds.amazonaws.com:5432/dyltrashs",
                "dyltra", "password");
        accounts = new AccountSQLRepo(connectionUtils);
        messages = new MessageSQLRepo(connectionUtils);
    }

    @Test
    public void testCreateDelete(){
        //each message has a unique ID generated by SQL that is arbitrary
        Message temp2 = new Message("Help me","dylan","dylan",0);
        Account temp = new Account("bob","dylan");
        accounts.save(temp);
        accounts.delete(temp.getName());
        messages.delete(messages.getLastId());
    }

    @Test
    public void testRead(){
        List<Message> ml;
        messages.setName("dylan");
        ml=messages.findAll();
        int i = 0;
        for (Message m:ml) {
            System.out.println(m.getMessage()+i++);
        }
    }

    @Test
    public void testModify(){
        Account temp;
        temp = accounts.findById("dylan");
        Assert.assertNotNull("Account was not referenced",temp);
        Assert.assertEquals("Wrong account was referenced", "password", temp.getPassword());
        temp.setPassword("password1");
        accounts.update(temp);
        temp = accounts.findById("dylan");
        Assert.assertNotNull("Account was not referenced",temp);
        Assert.assertEquals("Password should be changed to password1", "password1", temp.getPassword());

        //restore to normal
        temp.setPassword("password");
        accounts.update(temp);
    }
}
